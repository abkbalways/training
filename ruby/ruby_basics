Ruby Basics by Ajay Agrawal in Beryl Systems

Installation of rvm and ruby :-

1. sudo apt update
sudo apt install curl

2. Add RVM GPG key on Ubuntu 20.04 Linux

curl -sSL https://rvm.io/mpapis.asc | gpg --import -
curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -

3.  Command to Install RVM on Ubuntu 20.04 LTS

curl -sSL https://get.rvm.io | bash -s stable

4. Check the RVM version

Once the installation is completed reload the shell to start using the RVM command-line tool:

source ~/.bashrc

rvm --version

5.  List Ruby version available to install

rvm list known

6. Install the latest ruby

rvm install ruby

To get some particular old version, declare the version number:

rvm install 2.7.2

7. Set default or Switch to the Ruby version you want to use

rvm use 3.0.0

For setting default one:

rvm use 3.0.0 --default

------------------------------------------------------------------------------------------------------------------------------------------

- Interactive Ruby (Irb) :-

Its provide a shell for experimentation . Within this we can run ruby expression result , line by line .

For out from irb :

ctrl + d

- White Spaces in ruby :-

These are generally ignored by ruby except whenthey appear in strings. Sometimes, However they are used to interpret ambiguous statements .

Ex -

a + b is interpreted as a+b (Here a is a local variable)

a  +b is interpreted as a(+b) (Here a is a method call)

- Line Endings in ruby programs :-

Ruby interprets semicolons and new line characters as the ending of the statement. However if ruby encounters operators, such as +,-, pr backshlash at the end of the line , they indicate the contiunation of statement. 

Hello Ruby Program :-

# My First Ruby Program

puts "Hello World in Ruby !!";


-> Save this by any name like test.rb
-> run "ruby test.rb" in terminal

OUTPUT :-

Hello World in Ruby !!


Ruby Class and Objects :-

A class is a blueprint from which individual objects are created.

For Example :- 

Bicycle is the object of class Vehicles . and speetding , breaking , etc. are their functions.

Syntax :

class Classname

#content

end

Variables in a ruby :-

We have four types of variables in ruby .

1. Local Variables - These are the methods which is defined inside the methods. and we can't use that outside the method. Local variables started with lowercase letter or _.

Example :-

class Abc
def hello
    a = "hello world"; # local variable and this scope is only in this method .
    puts a;
end
end
my = Abc.new;
my.hello;


OUTPUT : 

hello world

2. Instance Variable 

These area available across methods for any particular instance or object . It means it will be change for object to object. These are preceded by the sign (@) followed by the variable name . 

Example :-

class Student
def initialize(id,name,marks)
        @id = id        # instance variable
        @name = name    # instance variable
        @marks =marks   # instance variable
        puts(@id,@name,@marks);
    
end

s1 = Student.new(101,'RAM',80);
s2 = Student.new(102,'SHYAM',70);
end

OUTPUT :-

101
RAM
80
102
SHYAM
70


3. Class Variable

These are available across different objects. It is belong with a class and is a characterstic of class . These are preceded by (@@) and are the followed by the variable name.

Example :-

class Student
@@cid = 121;    # class variable
def initialize(id,name,marks)
        @id = id        # instance variable
        @name = name    # instance variable
        @marks =marks   # instance variable
        puts(@@cid,@id,@name,@marks);  
    
end


s1 = Student.new(101,'RAM',80);
s2 = Student.new(102,'SHYAM',70);
end

OUTPUT :-

121
101
RAM
80
121
102
SHYAM
70

4. Global Variable

Class variable is not available across classes. If we want to make a variable which is available in all classes , we want to make a Global Variable . The global variables are preceded by the dollar($) sign.

Example :

$sid = 's101'   # global variable
class Student
@@cid = 121;    # class variable
def initialize(id,name,marks)
        @id = id        # instance variable
        @name = name    # instance variable
        @marks =marks   # instance variable
        puts($sid,@@cid,@id,@name,@marks,"\n");  
    
end


s1 = Student.new(101,'RAM',80);
s2 = Student.new(102,'SHYAM',70);
end

class Student2
    @@cid = 131;    # class variable
    def initialize(id,name,marks)
            @id = id        # instance variable
            @name = name    # instance variable
            @marks =marks   # instance variable
            puts($sid,@@cid,@id,@name,@marks,"\n");  
        
    end
    
    
    s1 = Student.new(201,'JATIN',90);
    s2 = Student.new(202,'LAKHAN',80);
end


OUTPUT :

s101
121
101
RAM
80

s101
121
102
SHYAM
70

s101
121
201
JATIN
90

s101
121
202
LAKHAN
80


Constants :- 

These are begin with uppercase letter. These can be define in or outside the class . but cannot not be defined in the method or function.

Example :

class Add

 A=5;
 B=6;
 C=A+B;
 def add
    puts("The result of #{A} + #{B} is #{C}");
 end
end

obj=Add.new();
obj.add;

OUTPUT :

The result of 5 + 6 is 11

-----------------------------------------------------------------------------------------------------------------------------------------

---- Case Study of Class and Objects ----


BEGIN{
puts "Start My Program" , "\n"
}

END{
puts "End My Program" , "\n"
}



class Students
    @@no_of_students=0

  def initialize(rollno,name,marks)
    @@no_of_students +=1
    @rollno=rollno
    @name=name
    @marks=marks
  end
  def display()
    puts "Roll No. : #@rollno "
    puts "Name : #@name "
    puts "Marks : #@marks","\n"
  end
  def total_students()
    puts "Total No. of Students : #@@no_of_students","\n"
  end
end

s1=Students.new(101,'Rahul',85)
s1.display
s1.total_students
s2=Students.new(102,'Gagan',87)
s2.display
s2.total_students
s3=Students.new(103,'Lakhsn',98)
s3.display
s3.total_students

s4=Students.new(104,'Jatin',75)
s5=Students.new(105,'Kavita',86)

s5.total_students;


OUTPUT :

Start My Program

Roll No. : 101 
Name : Rahul 
Marks : 85

Total No. of Students : 1

Roll No. : 102 
Name : Gagan 
Marks : 87

Total No. of Students : 2

Roll No. : 103 
Name : Lakhsn 
Marks : 98

Total No. of Students : 3

Total No. of Students : 5

End My Program


-------------------------------------------------------------------------------------------------------------------------------------------


Comments :-

(a) Single Line Comment :

We can give comment precided by #.

Ex:

puts "Delhi is the capital of India"   #I am Comment

OUTPUT :

Delhi is the capital of India

(b) Multi Line Comment :

We can comment multiple line . But it can be in starting of program or first line of program by syntax =begin and =end as follows

EX : 

begin 
I am the multiple lines comment . we can break line in that type of comment 
=end

puts "Delhi is the capital of India" 


OUTPUT :

Delhi is the capital of India


-------------------------------------------------------------------------------------------------------------------------------------

