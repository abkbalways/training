Ruby Strings By Ajay Agrawal at Beryl Systems 


Strings : 

A string object in ruby holds and manipulates an arbitrary sequence of one or more bytes, typically representing characters that represent human language.

The Simplest string enclosed in single quotes .

Example :

my_name ='Ajay'    #my_name is the varible which holds 'Ajay' string

puts my_name


OUTPUT :

Ajay


-> Apostrophe Character

If we need to place apostrophe character in single quote , precided by backslash (\).

Example :

text ='I don\'t have a dog'

puts text


OUTPUT :

I don't have a dog

----------------------------------------------------------------------------------------------------------------------------------------

String Methods :


1. sub and sub!

sub - It is used for substitute the given string, but it substitute string temporarily and if we use that string again it respond like previous string.

Ex -

puts "Enter Your Name :"
text =gets
puts text.sub(text,'Student') #Substitute input name by Student
puts text

OUTPUT :

Enter Your Name :
Ajay
Student
Ajay


it substitute only first word or character of a string.

Example :

text ="hello"
puts text.sub('l','*') #Substitute hello

OUTPUT :

he*lo


sub! - It is used for substitute the given string, it substitute string permanently. if we use string again it respond like new updated string.

Example :

puts "Enter Your Name :"
text =gets
puts text.sub!(text,'Student') #Substitute input name by Student Permanently
puts text

OUTPUT :

Enter Your Name :
Ajay
Student
Student

.....................................................................................................................................

2. gsub 

It is used for temporarily substitute character or word globally .

Example :

text ="hello"
puts text.gsub('l','*') #Substitute l globallay
puts text

OUTPUT :

he**o
hello


gsub! - It is used for permanently substitute character or word globally.

Example :

text ="hello"
puts text.gsub!('l','*') #Substitute l globallay
puts text

OUTPUT :

he**o
he**o

........................................................................................................................................

3. 

