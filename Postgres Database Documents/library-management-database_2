LIBRARY MANAGEMENT DATABASE IN POSTGRES BY AJAY AGRAWAL

DATABASE NAME - LIBRARY

CREATE DATABASE LIBRARY;

TABLES -

BOOKS // IT HAS ALL INFORMATION ABOUT THE BOOKS

BORROW // IT HAS THE ISBN OF BOOK , ID OF STUDENT AND ISSUE DATE

STUDENTS // IT HAS ALL INFORMATION ABOUT THE STUDENTS

CLASS // IT HAS THE CLASS ID AND NAME OF CLASS



TABLES :

BOOKS :

create table books(isbn int primary key,name varchar,author varchar,price int,book_range int,fine_per_day int,copies int );

isbn | name | author | price | book_range | fine_per_day | copies 
------+------+--------+-------+------------+--------------+--------
(0 rows)

AFTER INSERTION :

isbn |          name           |       author        | price | book_range | fine_per_day | copies 
------+-------------------------+---------------------+-------+------------+--------------+--------
 1001 | TARASH                  | JAVED AKHTAR        |   250 |         15 |           20 |     15
 1002 | ONE STEP TOWARD SUCCESS | DR. RAMANUJAN       |   450 |         20 |           15 |     10
 1003 | MY STORY                | DARSHAD SHARMA      |   170 |         10 |           20 |      5
 1004 | HOW TO COOK ?           | REEMA CHATURVEDI    |   580 |         20 |           10 |     20
 1005 | HORROR IS MY PASSION    | NAGRAJ DESHMUKH     |   890 |         30 |           10 |      5
 1006 | GOONJ                   | SHAKEEL AZMI        |   290 |         10 |           25 |     15
 1007 | PHYSICS CLASS 12        | H.C. VERMA          |   770 |         15 |           10 |     20
 1008 | CHEMISTRY CLASS 11      | S. CHAND            |   680 |         10 |           15 |     60
 1009 | MATHEMATICS CLASS 11    | R.D. SHARMA         |   450 |         20 |           10 |     40
 1010 | OOPS IN JAVA            | DR. HARRY SMITH     |   380 |         10 |           10 |     15
 1011 | DIGITAL MARKETING       | DR. TIM STARC       |   470 |         15 |           10 |     20
 1012 | HOW TO MARKET ?         | DR. GLARRY PETERSON |   890 |         15 |           15 |     30
 1013 | PANCHTANTRA             | VISHNU SHARMA       |   440 |         10 |           10 |     35
 1014 | DATABASE MANAGEMENT     | LAKSHYA YADAV       |   360 |         15 |            5 |     15
 1015 | HINDI CLASS 12          | DR. HIMANSHI SINGH  |   240 |         30 |            5 |     30
(15 rows)




STUDENTS :

create table students(id int primary key,name varchar,city varchar,mobile varchar(50),class_id char(5),dob date);

id | name | city | mobile | class_id | dob 
----+------+------+--------+----------+-----
(0 rows)

alter table students add constraint fk_students_class foreign key(class_id) references class(class_id);

AFTER INSERTION :

id  |  name   |    city    |   mobile   | class_id |    dob     
-----+---------+------------+------------+----------+------------
 101 | AKSHAY  | DELHI      | 9865985892 | C1       | 2000-12-25
 102 | ANSHUL  | DELHI      | 9459525892 | C1       | 2002-02-12
 103 | RASHID  | MUMBAI     | 9457558258 | C1       | 2000-12-02
 104 | RAMAN   | DELHI      | 9445458825 | C2       | 2001-03-07
 105 | RISHITA | MUMBAI     | 9445987863 | C3       | 2000-05-14
 106 | LAKSHYA | CHANDIGARH | 6944895259 | C4       | 2002-09-18
 107 | RAMLAL  | MUMBAI     | 6939558258 | C5       | 2001-11-01
 108 | GARGI   | DELHI      | 9835963695 | C1       | 2000-12-09
 109 | HARSHIT | MUMBAI     | 9458952269 | C3       | 2002-10-10
 110 | NIKITA  | DELHI      | 7898969269 | C2       | 2001-09-14
 111 | ROHAN   | CHANDIGARH | 6989896925 | C5       | 2000-05-06
 112 | ANMOL   | FARIDABAD  | 7893652897 | C2       | 2002-05-14
 113 | DRISHYA | FARIDABAD  | 7898652356 | C5       | 2001-03-25
 114 | LALIT   | GURUGRAM   | 9856985263 | C1       | 2002-11-14
 115 | FAHIM   | DELHI      | 8596321456 | C2       | 2000-07-12
 116 | TANISHA | DELHI      | 8596321456 | C3       | 1999-03-12
 117 | SURBHI  | GURUGRAM   | 8965892365 | C4       | 2000-02-25
 118 | KALPANA | DELHI      | 7865985698 | C5       | 2000-03-14
 119 | ISHANT  | FARIDABAD  | 9858969645 | C1       | 1999-06-25
 120 | UTTAM   | DELHI      | 8596983256 | C2       | 2000-05-14
(20 rows)





CLASS :

create table class(class_id char(5), name varchar(20));

class_id | name 
----------+------
(0 rows)

alter table class add primary key(class_id);

AFTER INSERTION :

class_id |   name   
----------+----------
 C1       | EIGHTH
 C2       | NINTH
 C3       | TENTH
 C4       | ELEVENTH
 C5       | TWELFTH
(5 rows)





BORROW :

create table borrow(isbn int,id int,date_of_submission date not null default current_date,constraint fk_id foreign key(id) references students(id));

alter table borrow add constraint fk_isbn foreign key(isbn) references books(isbn);


isbn | id | date_of_submission 
------+----+--------------------
(0 rows)


AFTER INSERTION :

isbn | id  | date_of_submission 
------+-----+--------------------
 1003 | 108 | 2022-01-01
 1008 | 112 | 2021-12-20
 1007 | 106 | 2021-12-10
 1009 | 112 | 2021-12-28
 1010 | 113 | 2022-01-03
 1009 | 114 | 2022-01-03
 1003 | 116 | 2021-11-29
 1007 | 109 | 2021-12-21
 1008 | 107 | 2022-01-02
 1015 | 119 | 2021-12-27
(10 rows)

RENAME COLUMN date_of_submission TO issue_date

and 

ADD COLUMN  date_of_submission 

alter table borrow add column date_of_submission date;


AFTER CHANGING :

isbn | id  | issue_date | date_of_submission 
------+-----+------------+--------------------
 1003 | 108 | 2022-01-01 | 
 1008 | 112 | 2021-12-20 | 
 1007 | 106 | 2021-12-10 | 
 1009 | 112 | 2021-12-28 | 
 1010 | 113 | 2022-01-03 | 
 1009 | 114 | 2022-01-03 | 
 1003 | 116 | 2021-11-29 | 
 1007 | 109 | 2021-12-21 | 
 1008 | 107 | 2022-01-02 | 
 1015 | 119 | 2021-12-27 | 
 1008 | 116 | 2021-11-12 | 
 1008 | 116 | 2021-11-12 | 
 1007 | 112 | 2021-11-18 | 
(13 rows)






QUERIES :

1. FOR FIND FINE ON STUDENTS

QUERY :

select r.name,(extract(days from age(br.issue_date))-b.book_range)*fine_per_day as fine from borrow br inner join books b on b.isbn=br.isbn inner join students r on r.id=br.id WHERE (extract(days from age(br.issue_date)) > b.book_range)  ;

OUTPUT :

name   | fine 
---------+------
 ANMOL   |   60
 LAKSHYA |   90
 TANISHA |  165
(3 rows)

QUERY :

select r.name,(extract(days from age(br.issue_date))-b.book_range)*fine_per_day as fine from borrow br inner join books b on b.isbn=br.isbn inner join students r on r.id=br.id WHERE (extract(days from age(br.issue_date)) > b.book_range)  ;

OUTPUT :

name   | fine 
---------+------
 ANMOL   |   60
 LAKSHYA |   90
 TANISHA |  165
 TANISHA |  165
(4 rows)


QUERY :

select r.name,sum((extract(days from age(br.issue_date))-b.book_range)*fine_per_day) as fine from borrow br inner join books b on b.isbn=br.isbn inner join students r on r.id=br.id WHERE (extract(days from age(br.issue_date)) > b.book_range) group by r.name;

OUTPUT :

name   | fine 
---------+------
 ANMOL   |   60
 TANISHA |  330
 LAKSHYA |   90
(3 rows)

2. FIND AVAILABLE COPIES OF GIVEN BOOK

3. PRINT THE NAME OF STUDENTS WITH BOOKS NAME ISSUED IN NOVEMBER

QUERY :

select s.name,b.name,br.issue_date from books b inner join borrow br on b.isbn=br.isbn inner join students s on s.id=br.id where(extract(month from date(issue_date)) = 11);


OUTPUT :

name   |        name        | issue_date 
---------+--------------------+------------
 TANISHA | MY STORY           | 2021-11-29
 ANMOL   | PHYSICS CLASS 12   | 2021-11-18
 TANISHA | CHEMISTRY CLASS 11 | 2021-11-12
 TANISHA | CHEMISTRY CLASS 11 | 2021-11-12
(4 rows)


4. PRINT THE NAME , NAME OF BOOK AND DAYS CROSS BOOK LIMIT WHICH CROSS BOOK_RANGE

QUERY :

select s.name,b.name,(current_date-br.issue_date)-b.book_range cross_days from students s inner join borrow br on s.id=br.id inner join books b on br.isbn=b.isbn where ((current_date-br.issue_date)>b.book_range); 

OUTPUT :

 name   |        name        | cross_days 
---------+--------------------+------------
 ANMOL   | CHEMISTRY CLASS 11 |          5
 LAKSHYA | PHYSICS CLASS 12   |         10
 TANISHA | MY STORY           |         26
 TANISHA | CHEMISTRY CLASS 11 |         43
 TANISHA | CHEMISTRY CLASS 11 |         43
 ANMOL   | PHYSICS CLASS 12   |         32
(6 rows)




