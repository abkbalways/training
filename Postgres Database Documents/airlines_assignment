DATABASE AIRLINES ASSIGNMENT BY AJAY AGRAWAL

DATABASE : AIRLINES

CREATE DATABASE AIRLINES

TABLES :

FLIGHTS // IT HAS ALL DETAILS ABOUT THE FLIGHTS

AIRCRAFT // IT HAS ALL DETAILS ABOUT THE AIRCRAFTS

CERTIFIED // IT GIVES THE RELATIONS OF PILOT TO AIRCRAFT

EMPLOYEES // IT HAS ALL INFORMATION ABOUT EMPLOYEES

TABLES :



1. FLIGHTS

create table flights(flno int primary key,"from" varchar(50),"to" varchar(50),distance int,departs time,arrives time,price int);

flno | from | to | distance | departs | arrives | price 
------+------+----+----------+---------+---------+-------
(0 rows)

AFTER INSERTION :

 flno |    from    |      to       | distance | departs  | arrives  | price 
------+------------+---------------+----------+----------+----------+-------
 1001 | DELHI      | PUNE          |     1000 | 12:10:12 | 16:12:19 |  2500
 1002 | DELHI      | MUMBAI        |     1300 | 14:10:12 | 19:02:19 |  2800
 1003 | HEYDERABAD | MUMBAI        |     1100 | 08:10:12 | 10:02:19 |  2200
 1004 | HEYDERABAD | BANGLORE      |      700 | 19:10:12 | 20:32:19 |  2400
 1005 | GUWAHATI   | DELHI         |     1900 | 18:40:19 | 22:02:16 |  2800
 1006 | DELHI      | PUNE          |     1000 | 16:19:18 | 19:19:09 |  2900
 1007 | PUNE       | DELHI         |     1000 | 18:15:19 | 22:18:39 |  2700
 1008 | GUWAHATI   | PUNE          |     1700 | 16:15:49 | 20:15:45 |  2900
 1009 | LUCKNOW    | DELHI         |     1300 | 17:19:49 | 20:15:00 |  2100
 1010 | MUMBAI     | DELHI         |     1300 | 18:16:10 | 21:15:00 |  2600
 1011 | MUMBAI     | TRIVANTHPURAM |     1800 | 05:12:00 | 09:10:00 |  3100
 1012 | MUMBAI     | TRIVANTHPURAM |     1800 | 17:12:00 | 21:10:00 |  3400
 1013 | CHENNAI    | KOLAKATA      |     2900 | 16:10:00 | 21:20:00 |  3900
 1014 | CHENNAI    | MUMBAI        |     2100 | 14:25:00 | 18:20:00 |  3000
 1015 | RAIPUR     | DELHI         |     2800 | 17:20:00 | 22:10:00 |  2700
(15 rows)

ADD SOME ROWS :

flno |    from     |    to    | distance | departs  | arrives  | price 
------+-------------+----------+----------+----------+----------+-------
 1016 | Los Angeles | Honolulu |    15000 | 07:12:00 | 22:18:00 | 45000
 1017 | Los Angeles | Chicago  |    10000 | 08:20:00 | 15:07:00 | 35000
 1018 | Los Angeles | Honolulu |    15000 | 11:12:00 | 23:18:00 | 60000
 1019 | Madison     | Newyork  |    12000 | 08:10:00 | 16:10:00 | 40000
 1020 | Madison     | Newyork  |    12000 | 11:10:00 | 18:40:00 | 45000
(5 rows)

2. AIRCRAFT 

create table aircraft(aid int primary key,aname varchar(50),cruisingrange int);

aid | aname | cruisingrange 
-----+-------+---------------
(0 rows)

TABLE AFTER INSERTION :

 aid |      aname      | cruisingrange 
-----+-----------------+---------------
 101 | BOEING 787      |          4000
 102 | BOEING 777      |          3500
 103 | AIRBUS A320     |          4500
 104 | AIRBUS A322     |          4500
 105 | BOMBARDIER CRJ  |          3000
 106 | BOMBARDIER A380 |          1850
 107 | BOMBARDIER ARC  |          3500
 108 | BOMBARDIER Q400 |          2500
 109 | TECNAM BTR25I   |           850
 110 | EMBRAER         |          3000
 111 | EMBRAER 2.0     |          3200
 112 | AIRBUS 720      |          1200
 113 | TECNAM P2006T   |          3600
 114 | TECNAM A250CA   |          4000
 115 | TECNAM BC45TA   |          4000
 116 | AIRBUS 420      |          1500
 117 | AIRBUS A460     |          4000
 118 | BOEING 890      |          3000
 119 | BOEING 121      |           700
 120 | BOEING 787      |          4000
(20 rows)


3. CERTIFIED

eid | aid 
-----+-----
(0 rows)


TABLE AFTER INSERTION :

eid | aid 
-----+-----
   1 | 106
   1 | 108
   1 | 109
   8 | 101
   8 | 116
   8 | 118
   9 | 117
   9 | 120
   7 | 105
   7 | 104
   3 | 109
   3 | 108
   3 | 104
   4 | 105
   4 | 111
   4 | 112
   4 | 102
   4 | 103
   7 | 107
   7 | 108
   7 | 110
  17 | 113
  17 | 114
  17 | 109
  19 | 115
  19 | 119
  19 | 108
   5 | 117
   5 | 118
   5 | 111
   5 | 101
  18 | 119
  18 | 110
  18 | 107
(34 rows)



4. EMPLOYEES

create table employees(eid int primary key,ename varchar(50),salary int);

eid | ename | salary 
-----+-------+--------
(0 rows)

TABLE AFTER INSERTION :

eid |       ename       | salary 
-----+-------------------+--------
  18 | JAITN SHARMA      |  45000
  19 | SONIYA KAUSHIK    |  70000
  20 | KANHA RAJPUT      |  85000
   1 | RAMAN GUPTA       |  40000
   2 | LALIT MISHRA      |  60000
   3 | GARRY SMITH       |  80000
   4 | NIKITA PRAJAPATI  | 100000
   5 | KANIKA MAHESWARI  |  45000
   6 | GAURAV MEHTA      |  60000
   7 | DEEPAK GARG       |  80000
   8 | PRAKASH TANEJA    | 120000
   9 | KUSHANK CHAUDHARY |  30000
  10 | LAKSHITA ARORA    |  70000
  11 | DAVID PETERSON    |  90000
  12 | GARVIT SWAMY      | 120000
  13 | GARIMA AGRAWAL    |  78000
  14 | GARVIT MODI       |  85000
  15 | MUKESH GANDHI     |  90000
  16 | MADDY GASCOIGNE   | 150000
  17 | AMAN RAJPUT       | 160000
(20 rows)

QUERIES :



2. For each pilot who is certified for more than three aircraft, find the eid and the 
maximum cruisingrange of the aircraft for which she or he is certified. 
 
QUERY : 

select e.eid,max(a.cruisingrange) from employees e inner join certified c on e.eid=c.eid inner join aircraft a on a.aid=c.aid group by e.eid having count(e.eid)>3;

OUTPUT :

eid | max  
-----+------
   4 | 4500
   5 | 4000
   7 | 4500
(3 rows)


3. Find the names of pilots whose salary is less than the price of the cheapest 
route from Los Angeles to Honolulu.

QUERY : 

select ename pilots  from employees where salary>(select min(price) from flights where "from"='Los Angeles' and "to"='Honolulu') and eid in (select eid from certified);

OUTPUT : 

 pilots      
------------------
 SONIYA KAUSHIK
 GARRY SMITH
 NIKITA PRAJAPATI
 DEEPAK GARG
 PRAKASH TANEJA
 AMAN RAJPUT
(6 rows)
 
4. For all aircraft with cruisingrange over 1000 miles, find the name of the 
aircraft and the average salary of all pilots certified for this aircraft.

QUERY :

select aname aircraft_name,avg(e.salary) average_salary from employees e inner join certified c on e.eid=c.eid inner join aircraft a on a.aid=c.aid where a.cruisingrange>1000 group by a.aname;

OUTPUT :

aircraft_name  |   average_salary    
-----------------+---------------------
 BOMBARDIER Q400 |  67500.000000000000
 AIRBUS A460     |  37500.000000000000
 AIRBUS 720      | 100000.000000000000
 EMBRAER 2.0     |  72500.000000000000
 AIRBUS 420      | 120000.000000000000
 BOMBARDIER A380 |  40000.000000000000
 BOEING 890      |  82500.000000000000
 TECNAM A250CA   | 160000.000000000000
 BOMBARDIER ARC  |  62500.000000000000
 AIRBUS A320     | 100000.000000000000
 TECNAM BC45TA   |  70000.000000000000
 BOMBARDIER CRJ  |  90000.000000000000
 TECNAM P2006T   | 160000.000000000000
 EMBRAER         |  62500.000000000000
 BOEING 777      | 100000.000000000000
 AIRBUS A322     |  80000.000000000000
 BOEING 787      |  65000.000000000000
(17 rows)



5.  Find the names of pilots certified for some Boeing aircraft.

QUERY :

select ename pilots from employees where eid in (select eid from certified where aid in (select aid from aircraft where aname ilike 'boeing%')); 


OUTPUT : 

 pilots       
-------------------
 KANIKA MAHESWARI
 JAITN SHARMA
 NIKITA PRAJAPATI
 PRAKASH TANEJA
 SONIYA KAUSHIK
 KUSHANK CHAUDHARY
(6 rows)



6. Find the aids of all aircraft that can be used on routes from Los Angeles to 
Chicago.

7. Identify the routes that can be piloted by every pilot who makes more than 
$100,000. 

8. Print the enames of pilots who can operate planes with cruisingrange greater 
than 3000 miles but are not certified on any Boeing aircraft.

QUERY :

select ename pilots from employees where eid in (select eid from certified where aid in (select aid from aircraft where cruisingrange>3000)) and eid not in (select eid from certified where aid in (select aid from aircraft where aname ilike 'boeing%'));  

OUTPUT :

 pilots    
-------------
 GARRY SMITH
 DEEPAK GARG
 AMAN RAJPUT
(3 rows)

