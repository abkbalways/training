Rails By Ajay Agrawal at Beryl Systems , 

To develop a web application using Ruby on Rails Framework, you need to install the following software âˆ’

    Ruby
    The Rails Framework
    A Web Server
    A Database System

We assume that you already have installed a Web Server and a Database System on your computer. You can use the WEBrick Web Server, 
which comes with Ruby. Most websites however use Apache or lightTPD web servers in production.

Rails works with many database systems, including MySQL, PostgreSQL, SQLite, Oracle, DB2 and SQL Server. Please refer to a corresponding 
Database System Setup manual to set up your database.

-----------------------------------------------------------------------------------------------------------------------

Installation of rails on Linux :

1. check rails version 

rails -v

if rails already installed , it gives the version of rails otherwise gives error "rails command not found". 

2. Install rails

If rails not find, install the rails by just run that command

gem install rails   // For install new version

gem install rails -v 5.0.0   // For install specified version

Now rails is installed , check by just run command "rails -v"

3. For install dependancies of pg (It is used for run various commands)

sudo apt install libpq-dev

4. For install pg

gem install pg

----------------------------------------------------------------------------------------------------------------------

For create new project of rails :

rails new <name of the project>   // it takes sql database by default

rails new <name of the project>  -d postgresql   // it takes user defined database

It creates rails project on the location at which we run that command.

---------------------------------------------------------------------------------------------------------------------- 

Setup config for database.yml :

in <project-name>/config/database.yml

uncomment and edit the information ,

database :

username :

password :

host :

port :

------------------------------------------------------------------------------------------------------------------------

For create database on local machine corresponding to project :

rack db:create

It creates database as name in database.yml of project to local machine.

For drop or delete the database , 

rack db:drop

------------------------------------------------------------------------------------------------------------------------

for create a table model :

rails generate model <name of model in singular form>

Ex : rails generate model book

It will create ,

invoke  active_record
      create    db/migrate/20220122063929_create_books.rb
      create    app/models/book.rb
      invoke    test_unit
      create      test/models/book_test.rb
      create      test/fixtures/books.yml

-------------------------------------------------------------------------------------------------------------------------

For add columns in models :

in db/migrate/20220122063929_create_books.rb,

      t.column :name, :string
      t.column :isbn, :int
      t.column :price, :float

write the column names and properties as above.

then run command rails db:migrate for migrate the table to local database.



After db : migrate ,

== 20220122063929 CreateBooks: migrating ======================================
-- create_table(:books)
   -> 0.2221s
== 20220122063929 CreateBooks: migrated (0.2223s) =============================
 


We can see out table in our database,

library_management_system=# select * from books;
 id | name | isbn | price | created_at | updated_at 
----+------+------+-------+------------+------------
(0 rows)

----------------------------------------------------------------------------------------------------------------------------

Migrations for Alter Table :

1. First of all create migration,

rails generate migration AddBookIdToBooks book_id:string

// It will create add column migration.

class AddBookIdToBooks < ActiveRecord::Migration[7.0]
  def change
    add_column :books, :book_id, :string
  end
end

After that, run 

rails db:migrate

for confirm change in table.

------------------------------------------------------------

2. For delete the column 

rails generate migration RemoveBookIdToBooks book_id:string

After that, 

class RemoveBookIdToBooks < ActiveRecord::Migration[7.0]
  def change
    add_column :books, :book_id, :string
  end
end

then, migrate the change by

rails db:migrate

-------------------------------------------------------------

3. For change the name of column

rails generate migration ChangeIsbnToBooks 

After that,

class ChangeIsbnToBooks < ActiveRecord::Migration[7.0]
  def change
    rename_column :books, :isbn , :book_id_new
  end
end

then, migrate the change by

rails db:migrate

-------------------------------------------------------------
